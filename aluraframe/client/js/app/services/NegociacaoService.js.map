{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","resolve","reject","get","then","negociacoes","map","Date","objeto","data","quantidade","valor","catch","console","log","erro","negociacao","getConnection","connection","dao","adiciona","Error","listaTodos","apagaTodos","service","_service","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","reduce","arrayAchatado","array","concat","filter","_listaNegociacoes","some","JSON","stringify","negociacaoExistente","forEach","_mensagem","texto"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import{HttpService} from './HttpService';\r\nimport{ConnectionFactory} from '../services/ConnectionFactory';\r\nimport{NegociacaoDao} from '../dao/NegociacaoDao';\r\nimport{Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor(){\r\n      this._http = new HttpService;\r\n    }\r\n\r\n    obterNegociacoesDaSemana(){\r\n\r\n        return new Promise((resolve, reject ) => {\r\n\r\n          this._http\r\n            .get('negociacoes/semana')\r\n            .then(negociacoes => {\r\n              resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data) , objeto.quantidade , objeto.valor)))\r\n            })\r\n            .catch(erro => {\r\n              console.log(erro);\r\n              reject('Não foi possível obter as negociacões da semana!')\r\n            });\r\n            \r\n          });             \r\n                \r\n    }\r\n\r\n\r\n    obterNegociacoesDaSemanaAnterior(){\r\n      \r\n      return new Promise((resolve, reject ) => {\r\n\r\n        this._http\r\n          .get('negociacoes/anterior')\r\n          .then(negociacoes => {\r\n            resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data) , objeto.quantidade , objeto.valor)))\r\n          })\r\n          .catch(erro => {\r\n            console.log(erro);\r\n            reject('Não foi possível obter as negociacões da semana anterior!')\r\n          });\r\n          \r\n        });             \r\n\r\n  }\r\n\r\n  obterNegociacoesDaSemanaRetrasada(){\r\n\r\n    return new Promise((resolve, reject ) => {\r\n\r\n      this._http\r\n        .get('negociacoes/retrasada')\r\n        .then(negociacoes => {\r\n          resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data) , objeto.quantidade , objeto.valor)))\r\n        })\r\n        .catch(erro => {\r\n          console.log(erro);\r\n          reject('Não foi possível obter as negociacões da semana retrasada!')\r\n        });\r\n        \r\n      });             \r\n    }\r\n\r\n    cadastrar(negociacao){\r\n\r\n      return ConnectionFactory\r\n          .getConnection()\r\n          .then(connection => new NegociacaoDao(connection))\r\n          .then(dao => dao.adiciona(negociacao ))\r\n          .then(() => 'Negociação adicionada com sucesso')\r\n          .catch(erro  => {\r\n            console.log(erro);\r\n            throw new Error ('Não foi possível adicionar a negociação')\r\n          });\r\n\r\n    }\r\n\r\n    lista(){\r\n      return ConnectionFactory\r\n          .getConnection()\r\n          .then(connection => new NegociacaoDao(connection))\r\n          .then(dao => dao.listaTodos())\r\n          .catch(erro => {\r\n              console.log(erro);\r\n              throw new Error('Não foi possível obter as negociações')\r\n            })\r\n    }\r\n\r\n    apaga(){\r\n          return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => 'Negociações apagadas com sucesso')\r\n            .catch(erro => {\r\n                  console.log(erro);\r\n                  throw new Error('Não foi possível apagar as negociações')\r\n            });\r\n    }\r\n\r\n    importa(){\r\n\r\n      let service = this._service;\r\n\r\n        Promise.all([\r\n          service.obterNegociacoesDaSemana(),\r\n          service.obterNegociacoesDaSemanaAnterior(),\r\n          service.obterNegociacoesDaSemanaRetrasada()]\r\n      ).then(negociacoes => {\r\n          negociacoes\r\n          .reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\r\n          .filter(negociacao => \r\n              !this._listaNegociacoes.negociacoes.some(negociacaoExistente => \r\n                  JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\r\n          .forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n          this._mensagem.texto = 'Negociações do período importadas';\r\n      })\r\n      .catch(erro => this._mensagem.texto = erro);\r\n\r\n    }\r\n}\r\n\r\n "]}