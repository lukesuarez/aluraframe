{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","Negociacao","NegociacoesView","MensagemView","NegociacaoService","DateHelper","Bind","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_ordemAtual","_service","_init","_listaNegociacoes","_MensagemView","_mensagem","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastrar","mensagem","_limpaFormulario","service","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","reduce","arrayAchatado","array","concat","filter","some","JSON","stringify","negociacaoExistente","apaga","esvazia","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","a","b"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import {ListaNegociacoes} from '../models/ListaNegociacoes';\r\nimport {Mensagem} from '../models/Mensagem';\r\nimport{Negociacao} from '../models/Negociacao';\r\n\r\nimport{NegociacoesView} from '../views/NegociacoesView';\r\nimport{MensagemView} from '../views/MensagemView';\r\n\r\nimport{NegociacaoService} from '../services/NegociacaoService';\r\n\r\nimport{DateHelper} from '../helpers/DateHelper';\r\nimport{Bind} from '../helpers/Bind';\r\n\r\nexport class NegociacaoController {\r\n\r\n    constructor(){\r\n        \r\n        //essa forma seria algo parecido com jquery, porém é preciso usar o método bind() para fazer \r\n        //com que a referencia do query selector seja document\r\n        let $ = document.querySelector.bind(document);\r\n        this._inputData = $('#data');\r\n        this._inputQuantidade = $('#quantidade');\r\n        this._inputValor = $('#valor');\r\n        this._ordemAtual = '';\r\n        this._service = new NegociacaoService();\r\n        this._init();\r\n\r\n\r\n        this._listaNegociacoes = new Bind(\r\n          new ListaNegociacoes(),\r\n          new NegociacoesView($('#negociacoesView')),\r\n          'adiciona', 'esvazia', 'ordena', ' inverteOrdem');\r\n      \r\n              \r\n        this._MensagemView = new MensagemView($('#mensagemView'));\r\n\r\n        this._mensagem = new Bind(\r\n          new Mensagem(),\r\n          new MensagemView($('#mensagemView')),\r\n          'texto');\r\n        \r\n          \r\n          \r\n          \r\n        }\r\n        \r\n        _init(){\r\n\r\n          this._service\r\n              .lista()\r\n              .then(negociacoes =>\r\n                  negociacoes.forEach(negociacao =>\r\n                      this._listaNegociacoes.adiciona(negociacao)))\r\n              .catch(erro => this._mensagem.texto = erro);\r\n\r\n\r\n              setInterval(() => {\r\n                  this.importaNegociacoes();\r\n              }, 3000);\r\n\r\n          }\r\n\r\n    adiciona(event) {\r\n\r\n      event.preventDefault();\r\n\r\n      let negociacao = this._criaNegociacao();\r\n\r\n      this._service\r\n        .cadastrar(negociacao)\r\n        .then((mensagem) => {\r\n            this._listaNegociacoes.adiciona(negociacao);\r\n            this._mensagem.texto = mensagem;\r\n            this._limpaFormulario();\r\n        })\r\n        .catch(erro => this._mensagem.texto = erro);\r\n\r\n            \r\n          }\r\n\r\n    importaNegociacoes(){\r\n\r\n\r\n      \r\n      let service = this._service;\r\n\r\n          Promise.all([\r\n            service.obterNegociacoesDaSemana(),\r\n            service.obterNegociacoesDaSemanaAnterior(),\r\n            service.obterNegociacoesDaSemanaRetrasada()]\r\n        ).then(negociacoes => {\r\n            negociacoes\r\n            .reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\r\n            .filter(negociacao => \r\n                !this._listaNegociacoes.negociacoes.some(negociacaoExistente => \r\n                    JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\r\n            .forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n            this._mensagem.texto = 'Negociações do período importadas';\r\n        })\r\n        .catch(erro => this._mensagem.texto = erro); \r\n     \r\n\r\n      // Promise.all([\r\n      //   service.obterNegociacoesDaSemana(), \r\n      //   service.obterNegociacoesDaSemanaAnterior(),\r\n      //   service.obterNegociacoesDaSemanaRetrasada()]\r\n      //   )\r\n      //   .then(negociacoes => \r\n      //     negociacoes.filter(negociacao => \r\n      //       !this._listaNegociacoes.negociacoes.some(negociacaoExistente => \r\n      //       JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\r\n      //   )       \r\n      //   .then(negociacoes => {\r\n      //     negociacoes\r\n      //       .reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\r\n      //       .forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n      //     this._mensagem.texto = 'Negociacoes importadas com sucesso!';\r\n      //   })\r\n      //   .catch(erro => this._mensagem.texto = erro)\r\n\r\n\r\n      /*\r\n      service.obterNegociacoesDaSemana()\r\n        .then(negociacoes => {\r\n          negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n          this._mensagem.texto = 'Negociações da semana obtidas com sucesso';\r\n      })\r\n      .catch(erro => this._mensagem.texto = erro);\r\n  \r\n      service.obterNegociacoesDaSemanaAnterior()\r\n        .then(negociacoes => {\r\n          negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n          this._mensagem.texto = 'Negociações da semana obtidas com sucesso';\r\n      })\r\n      .catch(erro => this._mensagem.texto = erro);\r\n  \r\n      service.obterNegociacoesDaSemanaRetrasada()\r\n        .then(negociacoes => {\r\n          negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n          this._mensagem.texto = 'Negociações da semana obtidas com sucesso';\r\n      })\r\n      .catch(erro => this._mensagem.texto = erro);\r\n      */\r\n\r\n      /*\r\n      service.obterNegociacoesDaSemana((erro, negociacoes) => {\r\n            if(erro){\r\n              this._mensagem.texto = erro;\r\n              return;\r\n            } \r\n\r\n            negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n\r\n        service.obterNegociacoesDaSemanaAnterior((erro, negociacoes) => {\r\n              if(erro){\r\n                this._mensagem.texto = erro;\r\n                return;\r\n              } \r\n        \r\n              negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n\r\n                  service.obterNegociacoesDaSemanaRetrasada((erro, negociacoes) => {\r\n                    if(erro){\r\n                      this._mensagem.texto = erro;\r\n                      return;\r\n                    } \r\n            \r\n                    negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n                    this._mensagem.texto = 'Negociações importadas com sucesso!';\r\n                  });\r\n              });\r\n          });\r\n          */\r\n\r\n\r\n\r\n        }      \r\n\r\n    apaga(){\r\n\r\n    this._service\r\n        .apaga()\r\n        .then(mensagem => {\r\n            this._mensagem.texto = mensagem;\r\n            this._listaNegociacoes.esvazia();\r\n        })\r\n        .catch(erro => this._mensagem.texto = erro);\r\n    }\r\n\r\n    _criaNegociacao(){\r\n\r\n      return new Negociacao(\r\n        DateHelper.textoParaData(this._inputData.value),\r\n        parseInt(this._inputQuantidade.value),\r\n        parseFloat(this._inputValor.value));\r\n\r\n    }\r\n\r\n    _limpaFormulario(){\r\n          \r\n        this._inputData.value = \"\",\r\n        this._inputQuantidade.value = 1,\r\n        this._inputValor.value = 0.0;\r\n\r\n        this._inputData.focus();\r\n    }\r\n    \r\n    ordena(coluna) {\r\n      if(this._ordemAtual == coluna) {\r\n          this._listaNegociacoes.inverteOrdem();\r\n      } else {\r\n          this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\r\n      }\r\n      this._ordemAtual = coluna;\r\n  }\r\n\r\n  }"]}